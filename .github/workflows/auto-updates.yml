name: Auto update branches
on:
    push:
        branches:
            - main
concurrency: auto-update

permissions:
    pull-requests: write
    contents: write

env:
    DEBIAN_FRONTEND: noninteractive

jobs:
    update-entraid-snap:
        name: Update EntraID Snap branch
        runs-on: ubuntu-latest
        env:
            BRANCH_NAME: msentraid-broker
        steps:
            - name: Install dependencies
              run: |
                set -eu
                sudo apt update
                sudo apt install -y git
            - uses: actions/checkout@v4
              with:
                ref: main
            - name: Merge main into branches
              continue-on-error: true
              run: |
                set -eux
                git config user.name "github-actions[bot]"
                git config user.email "github-actions[bot]@users.noreply.github.com"
                git config pull.rebase false
                git fetch
                git checkout -b ${{ env.BRANCH_NAME }} remotes/origin/${{ env.BRANCH_NAME }}

                # First, assume that we will have conflicts due to the merge command
                # failing the action if there's any.
                echo "entraid_conflict=true" >> $GITHUB_ENV
                git pull origin main --allow-unrelated-histories --commit

                # If we get to this point, there was no conflict
                git push origin ${{ env.BRANCH_NAME }}
                echo "entraid_conflict=false" >> $GITHUB_ENV
            - name: Restore branch
              if: ${{ env.entraid_conflict == 'true' }}
              run: |
                set -eux
                git merge --abort
            - name: Create Pull Request
              if: ${{ env.entraid_conflict == 'true' }}
              uses: poorva17/create-pr-action@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  HEAD_BRANCH: main
                  BASE_BRANCH: ${{ env.BRANCH_NAME }}
